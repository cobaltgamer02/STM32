
4_gpio_input.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000016c  08000188  08000188  00001188  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080002f4  080002fc  000012fc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080002f4  080002f4  000012fc  2**0
                  CONTENTS
  4 .ARM          00000000  080002f4  080002f4  000012fc  2**0
                  CONTENTS
  5 .preinit_array 00000000  080002f4  080002fc  000012fc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080002f4  080002f4  000012f4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  080002f8  080002f8  000012f8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  000012fc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  000012fc  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00002000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00002000  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  000012fc  2**0
                  CONTENTS, READONLY
 13 .debug_info   000002f2  00000000  00000000  0000132c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000000da  00000000  00000000  0000161e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000048  00000000  00000000  000016f8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 0000002c  00000000  00000000  00001740  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  000181c9  00000000  00000000  0000176c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   000005be  00000000  00000000  00019935  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0008841c  00000000  00000000  00019ef3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  000a230f  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000054  00000000  00000000  000a2354  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000052  00000000  00000000  000a23a8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000188 <__do_global_dtors_aux>:
 8000188:	b510      	push	{r4, lr}
 800018a:	4c05      	ldr	r4, [pc, #20]	@ (80001a0 <__do_global_dtors_aux+0x18>)
 800018c:	7823      	ldrb	r3, [r4, #0]
 800018e:	b933      	cbnz	r3, 800019e <__do_global_dtors_aux+0x16>
 8000190:	4b04      	ldr	r3, [pc, #16]	@ (80001a4 <__do_global_dtors_aux+0x1c>)
 8000192:	b113      	cbz	r3, 800019a <__do_global_dtors_aux+0x12>
 8000194:	4804      	ldr	r0, [pc, #16]	@ (80001a8 <__do_global_dtors_aux+0x20>)
 8000196:	f3af 8000 	nop.w
 800019a:	2301      	movs	r3, #1
 800019c:	7023      	strb	r3, [r4, #0]
 800019e:	bd10      	pop	{r4, pc}
 80001a0:	20000000 	.word	0x20000000
 80001a4:	00000000 	.word	0x00000000
 80001a8:	080002dc 	.word	0x080002dc

080001ac <frame_dummy>:
 80001ac:	b508      	push	{r3, lr}
 80001ae:	4b03      	ldr	r3, [pc, #12]	@ (80001bc <frame_dummy+0x10>)
 80001b0:	b11b      	cbz	r3, 80001ba <frame_dummy+0xe>
 80001b2:	4903      	ldr	r1, [pc, #12]	@ (80001c0 <frame_dummy+0x14>)
 80001b4:	4803      	ldr	r0, [pc, #12]	@ (80001c4 <frame_dummy+0x18>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	bd08      	pop	{r3, pc}
 80001bc:	00000000 	.word	0x00000000
 80001c0:	20000004 	.word	0x20000004
 80001c4:	080002dc 	.word	0x080002dc

080001c8 <main>:
#define PIN12											   (1U<<12)

#define BTN_PIN										PIN0
#define LED_PIN										PIN12

int main() {
 80001c8:	b480      	push	{r7}
 80001ca:	af00      	add	r7, sp, #0
	// 1. Enable clock access to GPIOD
	RCC->AHB1ENR |= GPIOAEN;
 80001cc:	4b19      	ldr	r3, [pc, #100]	@ (8000234 <main+0x6c>)
 80001ce:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80001d0:	4a18      	ldr	r2, [pc, #96]	@ (8000234 <main+0x6c>)
 80001d2:	f043 0301 	orr.w	r3, r3, #1
 80001d6:	6313      	str	r3, [r2, #48]	@ 0x30
	RCC->AHB1ENR |= GPIODEN;
 80001d8:	4b16      	ldr	r3, [pc, #88]	@ (8000234 <main+0x6c>)
 80001da:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80001dc:	4a15      	ldr	r2, [pc, #84]	@ (8000234 <main+0x6c>)
 80001de:	f043 0308 	orr.w	r3, r3, #8
 80001e2:	6313      	str	r3, [r2, #48]	@ 0x30
	// 2. Set PD12 as output pin
	GPIOD->MODER |= (1U << 24);
 80001e4:	4b14      	ldr	r3, [pc, #80]	@ (8000238 <main+0x70>)
 80001e6:	681b      	ldr	r3, [r3, #0]
 80001e8:	4a13      	ldr	r2, [pc, #76]	@ (8000238 <main+0x70>)
 80001ea:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 80001ee:	6013      	str	r3, [r2, #0]
	GPIOD->MODER &= ~(1U << 25);
 80001f0:	4b11      	ldr	r3, [pc, #68]	@ (8000238 <main+0x70>)
 80001f2:	681b      	ldr	r3, [r3, #0]
 80001f4:	4a10      	ldr	r2, [pc, #64]	@ (8000238 <main+0x70>)
 80001f6:	f023 7300 	bic.w	r3, r3, #33554432	@ 0x2000000
 80001fa:	6013      	str	r3, [r2, #0]
	//3. Set PA0 as input pin
	GPIOA->MODER &= ~(1U << 0);
 80001fc:	4b0f      	ldr	r3, [pc, #60]	@ (800023c <main+0x74>)
 80001fe:	681b      	ldr	r3, [r3, #0]
 8000200:	4a0e      	ldr	r2, [pc, #56]	@ (800023c <main+0x74>)
 8000202:	f023 0301 	bic.w	r3, r3, #1
 8000206:	6013      	str	r3, [r2, #0]
	GPIOA->MODER &= ~(1U << 1);
 8000208:	4b0c      	ldr	r3, [pc, #48]	@ (800023c <main+0x74>)
 800020a:	681b      	ldr	r3, [r3, #0]
 800020c:	4a0b      	ldr	r2, [pc, #44]	@ (800023c <main+0x74>)
 800020e:	f023 0302 	bic.w	r3, r3, #2
 8000212:	6013      	str	r3, [r2, #0]
	while (1) {
		/*Check if btn is pressed*/
		if (GPIOA->IDR & BTN_PIN) {
 8000214:	4b09      	ldr	r3, [pc, #36]	@ (800023c <main+0x74>)
 8000216:	691b      	ldr	r3, [r3, #16]
 8000218:	f003 0301 	and.w	r3, r3, #1
 800021c:	2b00      	cmp	r3, #0
 800021e:	d004      	beq.n	800022a <main+0x62>
			//Turn On
			GPIOD->BSRR = (LED_PIN);
 8000220:	4b05      	ldr	r3, [pc, #20]	@ (8000238 <main+0x70>)
 8000222:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
 8000226:	619a      	str	r2, [r3, #24]
 8000228:	e7f4      	b.n	8000214 <main+0x4c>
		} else {
			//Turn Off
			GPIOD->BSRR = (1U << 28);
 800022a:	4b03      	ldr	r3, [pc, #12]	@ (8000238 <main+0x70>)
 800022c:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8000230:	619a      	str	r2, [r3, #24]
		if (GPIOA->IDR & BTN_PIN) {
 8000232:	e7ef      	b.n	8000214 <main+0x4c>
 8000234:	40023800 	.word	0x40023800
 8000238:	40020c00 	.word	0x40020c00
 800023c:	40020000 	.word	0x40020000

08000240 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000240:	480d      	ldr	r0, [pc, #52]	@ (8000278 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000242:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000244:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000248:	480c      	ldr	r0, [pc, #48]	@ (800027c <LoopForever+0x6>)
  ldr r1, =_edata
 800024a:	490d      	ldr	r1, [pc, #52]	@ (8000280 <LoopForever+0xa>)
  ldr r2, =_sidata
 800024c:	4a0d      	ldr	r2, [pc, #52]	@ (8000284 <LoopForever+0xe>)
  movs r3, #0
 800024e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000250:	e002      	b.n	8000258 <LoopCopyDataInit>

08000252 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000252:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000254:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000256:	3304      	adds	r3, #4

08000258 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000258:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800025a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800025c:	d3f9      	bcc.n	8000252 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800025e:	4a0a      	ldr	r2, [pc, #40]	@ (8000288 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000260:	4c0a      	ldr	r4, [pc, #40]	@ (800028c <LoopForever+0x16>)
  movs r3, #0
 8000262:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000264:	e001      	b.n	800026a <LoopFillZerobss>

08000266 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000266:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000268:	3204      	adds	r2, #4

0800026a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800026a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800026c:	d3fb      	bcc.n	8000266 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800026e:	f000 f811 	bl	8000294 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000272:	f7ff ffa9 	bl	80001c8 <main>

08000276 <LoopForever>:

LoopForever:
  b LoopForever
 8000276:	e7fe      	b.n	8000276 <LoopForever>
  ldr   r0, =_estack
 8000278:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 800027c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000280:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000284:	080002fc 	.word	0x080002fc
  ldr r2, =_sbss
 8000288:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 800028c:	2000001c 	.word	0x2000001c

08000290 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000290:	e7fe      	b.n	8000290 <ADC_IRQHandler>
	...

08000294 <__libc_init_array>:
 8000294:	b570      	push	{r4, r5, r6, lr}
 8000296:	4d0d      	ldr	r5, [pc, #52]	@ (80002cc <__libc_init_array+0x38>)
 8000298:	4c0d      	ldr	r4, [pc, #52]	@ (80002d0 <__libc_init_array+0x3c>)
 800029a:	1b64      	subs	r4, r4, r5
 800029c:	10a4      	asrs	r4, r4, #2
 800029e:	2600      	movs	r6, #0
 80002a0:	42a6      	cmp	r6, r4
 80002a2:	d109      	bne.n	80002b8 <__libc_init_array+0x24>
 80002a4:	4d0b      	ldr	r5, [pc, #44]	@ (80002d4 <__libc_init_array+0x40>)
 80002a6:	4c0c      	ldr	r4, [pc, #48]	@ (80002d8 <__libc_init_array+0x44>)
 80002a8:	f000 f818 	bl	80002dc <_init>
 80002ac:	1b64      	subs	r4, r4, r5
 80002ae:	10a4      	asrs	r4, r4, #2
 80002b0:	2600      	movs	r6, #0
 80002b2:	42a6      	cmp	r6, r4
 80002b4:	d105      	bne.n	80002c2 <__libc_init_array+0x2e>
 80002b6:	bd70      	pop	{r4, r5, r6, pc}
 80002b8:	f855 3b04 	ldr.w	r3, [r5], #4
 80002bc:	4798      	blx	r3
 80002be:	3601      	adds	r6, #1
 80002c0:	e7ee      	b.n	80002a0 <__libc_init_array+0xc>
 80002c2:	f855 3b04 	ldr.w	r3, [r5], #4
 80002c6:	4798      	blx	r3
 80002c8:	3601      	adds	r6, #1
 80002ca:	e7f2      	b.n	80002b2 <__libc_init_array+0x1e>
 80002cc:	080002f4 	.word	0x080002f4
 80002d0:	080002f4 	.word	0x080002f4
 80002d4:	080002f4 	.word	0x080002f4
 80002d8:	080002f8 	.word	0x080002f8

080002dc <_init>:
 80002dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80002de:	bf00      	nop
 80002e0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80002e2:	bc08      	pop	{r3}
 80002e4:	469e      	mov	lr, r3
 80002e6:	4770      	bx	lr

080002e8 <_fini>:
 80002e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80002ea:	bf00      	nop
 80002ec:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80002ee:	bc08      	pop	{r3}
 80002f0:	469e      	mov	lr, r3
 80002f2:	4770      	bx	lr
